<launch>
  <!-- Arguments -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
  <arg name="open_rviz" default="true"/>


  <!-- TurtleBot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- <node pkg="tf" type="static_transform_publisher" name="base_link_to_base_footprint" args="0 0 0 0 0 0 base_link base_footprint" /> -->

  <!-- SLAM: Gmapping, Cartographer, Hector, Karto, Frontier_exploration, RTAB-Map -->

<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    <!-- Frame names -->
    <param name="map_frame"  value="map" />
    <param name="odom_frame" value="odom" />
    <param name="base_frame" value="base_footprint" />
    <!-- Tf use -->
    <param name="use_tf_scan_transformation"  value="true"/>
    <param name="use_tf_pose_start_estimate"  value="false"/>
    <param name="pub_map_scanmatch_transform" value="true" />
    <param name="pub_map_odom_transform"      value="true"/>
    <param name="tf_map_scanmatch_transform_frame_name" value="scanmatcher_frame" />

    <!-- Map size / start point -->
    <param name="map_resolution" value="0.05"/>
    <param name="map_size"       value="2048"/>
    <param name="map_start_x"    value="0.5"/>
    <param name="map_start_y"    value="0.5" />
    <param name="map_multi_res_levels" value="2" />

    <!-- Map update parameters -->
    <param name="update_factor_free"         value="0.4"/>
    <param name="update_factor_occupied"     value="0.9" />   
    <param name="map_update_distance_thresh" value="0.4"/>
    <param name="map_update_angle_thresh"    value="0.9" />
    <param name="map_pub_period"             value="2" />
    <param name="laser_z_min_value"          value= "-0.1" />
    <param name="laser_z_max_value"          value= "0.1" />
    <param name="laser_min_dist"             value="0.1" />
    <param name="laser_max_dist"             value="4" />

    <!-- Advertising config -->
    <param name="advertise_map_service"      value="true"/> 
    <param name="scan_subscriber_queue_size" value="5"/>
    <param name="scan_topic" value="scan"/>
    <param name="use_sim_time" value="true" />

    <!-- Debug parameters -->
    <!--
      <param name="output_timing"    value="false"/>
      <param name="pub_drawings"     value="true"/>
      <param name="pub_debug_output" value="true"/>
    -->
  </node>


  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="log">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find final_project)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find final_project)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find final_project)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find final_project)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find final_project)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find final_project)/param/dwa_local_planner_params.yaml" command="load" />

  </node>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
  </group>
</launch>